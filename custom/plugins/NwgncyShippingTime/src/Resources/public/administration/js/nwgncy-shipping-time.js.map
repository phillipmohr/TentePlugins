{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////var/www/html/tentecom/custom/plugins/NwgncyShippingTime/src/Resources/app/administration/src/extension/sw-product/page/sw-product-detail/index.js","webpack:////var/www/html/tentecom/custom/plugins/NwgncyShippingTime/src/Resources/app/administration/src/extension/sw-product/page/sw-product-detail/index.html.twig","webpack:////var/www/html/tentecom/custom/plugins/NwgncyShippingTime/src/Resources/app/administration/src/extension/sw-product/view/sw-product-detail-nst/index.js","webpack:////var/www/html/tentecom/custom/plugins/NwgncyShippingTime/src/Resources/app/administration/src/extension/sw-product/view/sw-product-detail-nst/index.html.twig","webpack:////var/www/html/tentecom/custom/plugins/NwgncyShippingTime/src/Resources/app/administration/src/extension/sw-product/index.js","webpack:////var/www/html/tentecom/custom/plugins/NwgncyShippingTime/src/Resources/app/administration/src/component/shipping-time-entity-grid/index.js","webpack:////var/www/html/tentecom/custom/plugins/NwgncyShippingTime/src/Resources/app/administration/src/component/shipping-time-entity-grid/index.html.twig"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Shopware","Component","override","template","_Shopware","Mixin","mapState","Data","Criteria","getComponentHelper","register","inject","props","product","type","required","mixins","getByName","data","isLoading","computed","_objectSpread","State","console","log","customFields","this","$set","methods","createdComponent","message","Module","routeMiddleware","next","currentRoute","children","push","path","component","meta","parentPath","entity","String","defaultItem","default","shippingItemsLoaded","salesChannels","salesChannelsValues","shippingTimes","shippingTimesBySalesChannel","item","newEntity","totalCount","shippingTimeOptions","label","$tc","salesChannelsValuesForSelects","repository","repositoryFactory","salesChannelRepository","created","getShippingTimeItems","getSalesChannels","_this","criteria","_i","_Object$entries","entries","length","_Object$entries$_i","_slicedToArray","field","addFilter","equals","search","Context","api","then","total","forEach","salesChannelId","shippingTime","_this2","addAssociation","updateShippingTimeForEverySalesChannel","selectedValue","_this3","promises","salesChannel","id","entityToSave","undefined","productId","parseInt","save","Promise","all","optionSelected","_this4"],"mappings":"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","file":"static/js/nwgncy-shipping-time.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/bundles/nwgncyshippingtime/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"3Ot0\");\n","import template from './index.html.twig';\r\n\r\nconst {Component} = Shopware;\r\n\r\nComponent.override('sw-product-detail', {\r\n    template\r\n});\r\n","export default \"{% block sw_product_detail_content_tabs_general %}\\r\\n    {% parent %}\\r\\n    <sw-tabs-item v-if=\\\"product\\\"\\r\\n                  :route=\\\"{ name: 'sw.product.detail.nst' }\\\"\\r\\n                  :title=\\\"$tc('nwgncy-shipping-time.general.mainMenuItemGeneral')\\\">\\r\\n        {{ $tc('nwgncy-shipping-time.general.mainMenuItemGeneral') }}\\r\\n    </sw-tabs-item>\\r\\n{% endblock %}\\r\\n\";","const {Component, Mixin} = Shopware;\r\nconst {Criteria} = Shopware.Data;\r\nconst {mapState} = Shopware.Component.getComponentHelper();\r\n\r\nimport template from './index.html.twig';\r\n\r\nComponent.register('sw-product-detail-nst', {\r\n    template,\r\n\r\n    inject: ['repositoryFactory', 'context'],\r\n\r\n    props: {\r\n        product: {\r\n            type: Object,\r\n            required: true\r\n        }\r\n    },\r\n\r\n    mixins: [\r\n        Mixin.getByName('notification'),\r\n        Mixin.getByName('placeholder')\r\n    ],\r\n\r\n    data() {\r\n        return {\r\n            isLoading: false\r\n        };\r\n    },\r\n\r\n    computed: {\r\n        ...mapState('swProductDetail', [\r\n            'product'\r\n        ]),\r\n\r\n        product() {\r\n            const product = Shopware.State.get('swProductDetail').product;\r\n            console.log(product);\r\n            console.log('product');\r\n            \r\n            if (!product.customFields) {\r\n                this.$set(product, 'customFields', {});\r\n            }\r\n\r\n            return product;\r\n        },\r\n\r\n        // merchantStockFilterColumns() {\r\n        //     return [\r\n        //         'merchant.name',\r\n        //         'merchant.originId',\r\n        //         'isStock',\r\n        //         'stock',\r\n        //         'deliveryTime.name'\r\n        //     ];\r\n        // },\r\n\r\n        // merchantStockCriteria() {\r\n        //     const criteria = new Criteria();\r\n\r\n        //     criteria.addAssociation('product');\r\n        //     criteria.addAssociation('merchant');\r\n        //     criteria.addAssociation('deliveryTime');\r\n\r\n        //     return criteria;\r\n        // }\r\n    },\r\n    methods: {\r\n        createdComponent() {\r\n            // this.setProduct();\r\n        },\r\n        log(message) {\r\n            console.log(message);\r\n            \r\n            \r\n        },\r\n    }\r\n});\r\n","export default \"<div class=\\\"sw-product-detail-base\\\">\\r\\n    <sw-card v-if=\\\"product && product.id\\\"\\r\\n             :isLoading=\\\"isLoading\\\"\\r\\n             :title=\\\"$tc('nwgncy-shipping-time.label.deliveryTimeBySalesChannel')\\\"\\r\\n             class=\\\"moorl-entity-grid\\\">\\r\\n        <shipping-time-entity-grid entity=\\\"nwgncy_product_shipping_time\\\"\\r\\n                           :defaultItem=\\\"{ productId: product.id }\\\"\\r\\n                           :isLoading=\\\"isLoading\\\">\\r\\n        </shipping-time-entity-grid>\\r\\n    </sw-card>\\r\\n</div>\\r\\n \";","const {Module} = Shopware;\r\n\r\nimport './page/sw-product-detail';\r\nimport './view/sw-product-detail-nst';\r\n\r\nModule.register('sw-product-detail-nst-tab', {\r\n    routeMiddleware(next, currentRoute) {\r\n        if (currentRoute.name === 'sw.product.detail') {\r\n            currentRoute.children.push({\r\n                name: 'sw.product.detail.nst',\r\n                path: '/sw/product/detail/:id/nst',\r\n                component: 'sw-product-detail-nst',\r\n                meta: {\r\n                    parentPath: \"sw.product.index\"\r\n                }\r\n            });\r\n        }\r\n        next(currentRoute);\r\n    }\r\n});\r\n    ","import template from './index.html.twig';\r\n\r\nconst { Component, Mixin } = Shopware;\r\nconst Criteria = Shopware.Data.Criteria;\r\n \r\nComponent.register('shipping-time-entity-grid', {\r\n    inject: ['repositoryFactory', 'acl'],\r\n\r\n    template,\r\n\r\n    props: {\r\n        entity: {\r\n            type: String,\r\n            required: true\r\n        },\r\n        defaultItem: {\r\n            type: Object,\r\n            required: true,\r\n            default() {\r\n                return {};\r\n            }\r\n        }\r\n    },\r\n\r\n    data() {\r\n        return {\r\n            shippingItemsLoaded: false,\r\n            salesChannels: null,\r\n            salesChannelsValues: [],\r\n            shippingTimes: null,\r\n            shippingTimesBySalesChannel: [],\r\n            item: null,\r\n            entity: null,\r\n            newEntity: null,\r\n            totalCount: 0,\r\n            isLoading: false,\r\n\r\n        };\r\n    },\r\n\r\n    computed: {\r\n\r\n        shippingTimeOptions() {\r\n            return [\r\n                {\r\n                    value: 0,\r\n                    label: this.$tc('nwgncy-shipping-time.options.shippingTimeOne')\r\n                },\r\n                {\r\n                    value: 1,\r\n                    label: this.$tc('nwgncy-shipping-time.options.shippingTimeTwo')\r\n                },\r\n            ];\r\n        },\r\n\r\n        salesChannelsValuesForSelects() {\r\n            return this.salesChannelsValues;\r\n        },\r\n\r\n        repository() {\r\n            return this.repositoryFactory.create(this.entity);\r\n        },\r\n\r\n        salesChannelRepository() {\r\n            return this.repositoryFactory.create('sales_channel');\r\n        },\r\n    },\r\n    created() {\r\n        this.createdComponent();\r\n    },\r\n    methods: {\r\n        createdComponent() {\r\n            this.getShippingTimeItems();\r\n            this.getSalesChannels();\r\n        },\r\n\r\n        getShippingTimeItems() {\r\n            this.isLoading = true;\r\n            const criteria = new Criteria();\r\n  \r\n            for (const [field, value] of Object.entries(this.defaultItem)) {\r\n                criteria.addFilter(Criteria.equals(field, value));\r\n            }\r\n\r\n            this.repository.search(criteria, Shopware.Context.api).then((shippingTimes) => {\r\n                this.salesChannelsValues = [];\r\n                if (shippingTimes.total > 0) {\r\n                   \r\n                    shippingTimes.forEach((item) => {\r\n                        this.shippingTimesBySalesChannel[item.salesChannelId] = item;\r\n                        this.salesChannelsValues[item.salesChannelId] = item.shippingTime;\r\n                    });\r\n                   \r\n                }\r\n                this.shippingItemsLoaded = true;\r\n                this.shippingTimes = shippingTimes;\r\n                this.isLoading = false;\r\n            });\r\n        },\r\n\r\n        getSalesChannels() {\r\n            this.isLoading = true;\r\n            const criteria = new Criteria();\r\n            criteria.addAssociation('translations');\r\n            criteria.addFilter(Criteria.equals('active', 1));\r\n\r\n            this.salesChannelRepository.search(criteria, Shopware.Context.api).then((salesChannels) => {\r\n                this.salesChannels = salesChannels;\r\n                this.isLoading = false;\r\n\r\n            });\r\n        },\r\n\r\n        log(object) {\r\n            console.log(object);\r\n        },\r\n\r\n        updateShippingTimeForEverySalesChannel(selectedValue) {\r\n            this.isLoading = true;\r\n            const promises = [];\r\n            \r\n            if (selectedValue === null || selectedValue === undefined ) {\r\n                return;\r\n            }\r\n\r\n            this.salesChannels.forEach((salesChannel) => {\r\n\r\n                let salesChannelId = salesChannel.id;\r\n                let entityToSave = null;\r\n                if (this.shippingTimesBySalesChannel[salesChannelId] !== undefined) {\r\n                    entityToSave = this.shippingTimesBySalesChannel[salesChannelId];\r\n                } else {\r\n    \r\n                    entityToSave = this.repository.create(Shopware.Context.api);\r\n                    entityToSave.productId = this.defaultItem.productId;\r\n                    entityToSave.salesChannelId = salesChannelId;\r\n                }\r\n\r\n                entityToSave.shippingTime = parseInt(selectedValue);\r\n\r\n                promises.push(this.repository.save(entityToSave, Shopware.Context.api));\r\n            });\r\n\r\n            Promise.all(promises).then(() => {\r\n                this.getSalesChannels();\r\n                this.getShippingTimeItems();\r\n                this.isLoading = false;\r\n            });\r\n\r\n        },\r\n\r\n        optionSelected(selectedValue, salesChannel) {\r\n\r\n            if (selectedValue === null || selectedValue === undefined ) {\r\n                return;\r\n            }\r\n\r\n            let salesChannelId = salesChannel.id;\r\n            \r\n            if (this.shippingTimesBySalesChannel[salesChannelId] !== undefined) {\r\n                this.newEntity = this.shippingTimesBySalesChannel[salesChannelId];\r\n            } else {\r\n\r\n                this.newEntity = this.repository.create(Shopware.Context.api);\r\n                this.newEntity.productId = this.defaultItem.productId;\r\n                this.newEntity.salesChannelId = salesChannelId;\r\n            }\r\n            this.salesChannelsValues[salesChannelId] = selectedValue;\r\n            this.newEntity.shippingTime = parseInt(selectedValue);\r\n            console.log('optionSelected');\r\n                \r\n            this.repository\r\n                .save(this.newEntity, Shopware.Context.api)\r\n                .then(() => {\r\n                    this.getShippingTimeItems();\r\n                });\r\n        },\r\n\r\n\r\n \r\n    }\r\n});","export default \"<div v-if=\\\"salesChannels && shippingItemsLoaded\\\">\\r\\n\\r\\n    <sw-container slot=\\\"grid\\\" rows=\\\"auto auto\\\">\\r\\n        <sw-card-section>\\r\\n\\r\\n            <sw-container\\r\\n                columns=\\\"1fr 1fr\\\"\\r\\n                gap=\\\"0 32px\\\"\\r\\n            >\\r\\n\\r\\n                <sw-single-select\\r\\n                    :disabled=\\\"isLoading\\\"\\r\\n                    :isLoading=\\\"isLoading\\\"\\r\\n                    :disableSearchFunction=\\\"true\\\"\\r\\n                    :label=\\\"$tc('nwgncy-shipping-time.label.updateAllDeliveryTimes')\\\"\\r\\n                    :options=\\\"shippingTimeOptions\\\"\\r\\n                    {% if VUE3 %}\\r\\n                    @update:value=\\\"updateShippingTimeForEverySalesChannel($event)\\\"\\r\\n                    {% else %}\\r\\n                    @change=\\\"updateShippingTimeForEverySalesChannel($event)\\\"\\r\\n                    {% endif %}\\r\\n                >\\r\\n                </sw-single-select>\\r\\n            </sw-container>\\r\\n            <div v-for=\\\"salesChannel in salesChannels\\\">\\r\\n\\r\\n                <sw-container\\r\\n                    columns=\\\"1fr 1fr\\\"\\r\\n                    gap=\\\"0 32px\\\"\\r\\n                >\\r\\n\\r\\n                    <sw-single-select\\r\\n                        :disableSearchFunction=\\\"true\\\"\\r\\n                        :disabled=\\\"isLoading\\\"\\r\\n                        :key=\\\"salesChannel.id\\\"\\r\\n                        v-model=\\\"salesChannelsValuesForSelects[salesChannel.id]\\\"\\r\\n                        :label=\\\"salesChannel.name || salesChannel.translated.name\\\"\\r\\n                        {# salesChannel.name || $tc('saleschannel.translation', { label: salesChannel.name }) #}\\r\\n                        :options=\\\"shippingTimeOptions\\\"\\r\\n                        {% if VUE3 %}\\r\\n                        @update:value=\\\"optionSelected($event, salesChannel)\\\"\\r\\n                        {% else %}\\r\\n                        @change=\\\"optionSelected($event, salesChannel)\\\"\\r\\n                        {% endif %}\\r\\n                    >\\r\\n                    </sw-single-select>\\r\\n\\r\\n                </sw-container>\\r\\n\\r\\n            </div>\\r\\n        </sw-card-section>\\r\\n    </sw-container>\\r\\n</div>\\r\\n\";"],"sourceRoot":""}